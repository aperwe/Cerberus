//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Localization.LocSolutions.Cerberus.Configurator.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.3.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("c:\\Users\\Artur\\Programming\\Cerberus\\Configuration.xml")]
        public string DatabaseLocation {
            get {
                return ((string)(this["DatabaseLocation"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ArrayOfString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <string>%OTOOLS%\bin\intl\OSLEBot\Exec</string>
  <string>%OTOOLS%\bin\lsbuild6.0</string>
  <string>en-US</string>
</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection AssemblyResolvePaths {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["AssemblyResolvePaths"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-1")]
        public double MainWindowWidth {
            get {
                return ((double)(this["MainWindowWidth"]));
            }
            set {
                this["MainWindowWidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-1")]
        public double MainWindowsHeight {
            get {
                return ((double)(this["MainWindowsHeight"]));
            }
            set {
                this["MainWindowsHeight"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-1")]
        public double MainWindowX {
            get {
                return ((double)(this["MainWindowX"]));
            }
            set {
                this["MainWindowX"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-1")]
        public double MainWindowY {
            get {
                return ((double)(this["MainWindowY"]));
            }
            set {
                this["MainWindowY"] = value;
            }
        }
        
        /// <summary>
        /// Contains names of environment variables that should be used when adding new checks to configuration to make paths the the checks independent from the absolute locations on the computer where they were added.
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Contains names of environment variables that should be used when adding new check" +
            "s to configuration to make paths the the checks independent from the absolute lo" +
            "cations on the computer where they were added.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ArrayOfString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <string>OTOOLS</string>
  <string>BUILDROOT</string>
  <string>INTL_TOOLS</string>
  <string>SRCROOT</string>
</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection EnvironmentVariablesForNewChecks {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["EnvironmentVariablesForNewChecks"]));
            }
            set {
                this["EnvironmentVariablesForNewChecks"] = value;
            }
        }
    }
}
