<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MainWindowTitle" xml:space="preserve">
    <value>Cerberus Admin Config Tool v{0}</value>
    <comment>Title of the main window. {0} - version string.</comment>
  </data>
  <data name="MessageBoxHeader" xml:space="preserve">
    <value>Cerberus</value>
    <comment>Title text of message boxes shown in Cerberus.Configurator application.</comment>
  </data>
  <data name="FeatureNotImplementedString" xml:space="preserve">
    <value>This feature is not yet implemented.</value>
    <comment>FeatureNotImplementedString description</comment>
  </data>
  <data name="ConfirmApplicationExit" xml:space="preserve">
    <value>Are you sure you want to exit. (Unsaved changes to the database will be lost.)</value>
    <comment>Text shown in message box, prompting for confirmation whether the user wants to exit the application.</comment>
  </data>
  <data name="SaveFileFailedFormat" xml:space="preserve">
    <value>Cannot save your changes because: {0} If this file is under version control, make sure you check it out first, then try saving again.</value>
    <comment>SaveFileFailedFormat description</comment>
  </data>
  <data name="LoadingDataInDataInProgress" xml:space="preserve">
    <value>Loading data from Configuration.xml</value>
    <comment>LoadingDataInDataInProgress description</comment>
  </data>
  <data name="LoadedData" xml:space="preserve">
    <value>Loaded data from Configuration.xml</value>
    <comment>LoadedData description</comment>
  </data>
  <data name="DataFileDoesNotExist" xml:space="preserve">
    <value>Configuration data file cannot be located.</value>
    <comment>DataFileDoesNotExist description</comment>
  </data>
  <data name="SavingDataInProgress" xml:space="preserve">
    <value>Saving data to Configuration.xml</value>
    <comment>SavingDataInProgress description</comment>
  </data>
  <data name="SavedData" xml:space="preserve">
    <value>Saved data to Configuration.xml</value>
    <comment>SavedData description</comment>
  </data>
  <data name="EnlistmentDetectedFormat" xml:space="preserve">
    <value>Enlistment detected at: {0}.</value>
    <comment>EnlistmentDetectedFormat description</comment>
  </data>
  <data name="EnlistmentNotDetected" xml:space="preserve">
    <value>Office 14 enlistment not detected.</value>
    <comment>EnlistmentNotDetected description</comment>
  </data>
  <data name="UpdatingDatabase" xml:space="preserve">
    <value>Updating database...</value>
    <comment>UpdatingDatabase description</comment>
  </data>
  <data name="DatabaseUpdateFinished" xml:space="preserve">
    <value>Database update finished.</value>
    <comment>DatabaseUpdateFinished description</comment>
  </data>
  <data name="DatabaseNotUpdated" xml:space="preserve">
    <value>Database was not updated.</value>
    <comment>Text shown when enlistment was not detected when attempting to update the database from the contents of the enlistment.</comment>
  </data>
</root>